import "./purRepView.scss";
import React from "react";
import logo from "../../../assets/logo.png";
import Sidebar from "../../../components/sidebar/Sidebar";
import Navbar from "../../../components/navbar/Navbar";
import { DataGrid } from "@mui/x-data-grid";
import { Link } from "react-router-dom";
import { useNavigate } from "react-router-dom";
import { useEffect, useState, useContext, useRef } from "react";
import { collection, onSnapshot } from "firebase/firestore";
import { db } from "../../../firebase";

const userColumns = [
  // { field: "id", headerName: "ID", width: 70 },
  {
    field: "suppName",
    headerName: "Supplier Name",
    width: 190,
  },

  {
    field: "suppPhone",
    headerName: "Phone",
    width: 130,
  },
  {
    field: "suppEmail",
    headerName: "Email",
    width: 150,
  },
  {
    field: "fuelType",
    headerName: "Fuel",
    width: 100,
  },
  {
    field: "fuelTank",
    headerName: "Tank No.",
    width: 70,
  },
  {
    field: "litter",
    headerName: "Litters",
    width: 60,
  },
  {
    field: "pricePerLitter",
    headerName: "Price/Litter",
    width: 90,
  },
  {
    field: "totalPrice",
    headerName: "Total",
    width: 80,
  },
  {
    field: "perchaseDate",
    headerName: "Date",
    width: 120,
  },
  {
    field: "status",
    headerName: "Status",
    width: 120,
    renderCell: (params) => {
      return (
        <div className={`cellWithStatus ${params.row.status}`}>
          {params.row.status}
        </div>
      );
    },
  },
];

const PurRepView = React.forwardRef((props, ref) => {
  const navigate = useNavigate();

  const [data, setData] = useState([]);

  useEffect(() => {
    const unsub = onSnapshot(
      collection(db, "purchase"),
      (snapShot) => {
        let list = [];
        snapShot.docs.forEach((doc) => {
          list.push({ id: doc.id, ...doc.data() });
        });
        setData(list);
      },
      (error) => {
        console.log(error);
      }
    );

    return () => {
      unsub();
    };
  }, []);

  
  const date = new Date();

  const dayDate = date.getDate();
  const monthDate = date.getMonth() + 1;
  const yearDate = date.getFullYear();

  const months = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ];

  return (
    <div className="purchaseReport" ref={ref}>
      <div className="purRepViewContainer">
        <div className="datatable">
          <div className="reportTitle">
            <div className="company">
              <img src={logo} alt="" />
              SINAY PETROLEUM
            </div>
            <p className="report_type">Purchase Report</p>
            <p className="report_date">Report Date: <span>{ dayDate + " - " + months[monthDate] + " - " + yearDate}</span> </p>
          </div>
          <DataGrid
            className="reportDatagrid"
            rows={data}
            columns={userColumns}
            pageSize={5}
            rowsPerPageOptions={[9]}
            // checkboxSelection
          />
        </div>
      </div>
    </div>
  );
});

export default PurRepView;


========================== SASS =======================
.purchaseReport {
  display: flex;
  width: 100%;
  position: relative;

  .purRepViewContainer {
    width: 100%;

    .datatable {
      position: relative;
      height: 100%;
      padding: 20px;
      width: 100% !important;

      .reportDatagrid {
        height: 100%;
        overflow-x: hidden;
        width: 100% !important;
      }

      .reportTitle {
        width: 100%;
        font-size: 24px;
        color: gray;
        margin-bottom: 10px;
        display: block;

        .company {
          display: flex;
          align-items: center;
          justify-content: center;
          color: #10316b;
          font-weight: 600;
          gap: 1rem;

          img {
            width: 1.5rem;
          }
        }

        .report_type {
          text-align: center;
          margin-top: 1rem;
          color: #10316bbd;
        }

        .report_date {
          font-size: 1rem;
          margin-top: 1rem;
          margin-bottom: 1rem;
          width: 13.4rem;
          border-bottom: 1.5px solid gray;

          span {
            font-weight: 600;
            color: #10316bbd;
            margin-left: 0.5rem;
          }
        }

        .link {
          text-decoration: none;
          color: #10316b;
          font-size: 16px;
          font-weight: 400;
          border: 1px solid #10316b;
          padding: 5px;
          border-radius: 5px;
          display: flex;
          align-items: center;
          gap: 0.4rem;
          cursor: pointer;
          transition: 0.3s ease-in-out;

          .print-icon {
            font-size: 1.3rem;
          }

          &:hover {
            background-color: #10316b;
            color: #fff;
          }
        }
      }

      .cellWithImg {
        display: flex;
        align-items: center;

        .cellImg {
          width: 32px;
          height: 32px;
          border-radius: 50%;
          object-fit: cover;
          margin-right: 20px;
        }
      }

      .cellWithStatus {
        padding: 5px;
        border-radius: 5px;

        &.active {
          background-color: rgba(0, 128, 0, 0.05);
          color: green;
        }
        &.pending {
          background-color: rgba(255, 217, 0, 0.05);
          color: goldenrod;
        }
        &.passive {
          background-color: rgba(255, 0, 0, 0.05);
          color: crimson;
        }
      }

      .cellAction {
        display: flex;
        align-items: center;
        gap: 15px;

        .viewButton {
          padding: 2px 5px;
          border-radius: 5px;
          color: darkblue;
          border: 1px dotted rgba(0, 0, 139, 0.596);
          cursor: pointer;
        }

        .deleteButton {
          padding: 2px 5px;
          border-radius: 5px;
          color: crimson;
          border: 1px dotted rgba(220, 20, 60, 0.6);
          cursor: pointer;
        }

        .editButton {
          padding: 2px 5px;
          border-radius: 5px;
          color: rgb(16, 141, 16);
          border: 1px dotted rgb(16, 141, 16);
          cursor: pointer;
        }
      }
    }
  }
}
