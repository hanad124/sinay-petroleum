import {
  require_prop_types
} from "./chunk-VEAWOMMH.js";
import {
  require_react
} from "./chunk-6CE3F7YD.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/react-beforeunload/lib/index.esm.js
var import_prop_types = __toESM(require_prop_types());
var import_react = __toESM(require_react());

// node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var isProduction = false;
var prefix = "Invariant failed";
function invariant(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction) {
    throw new Error(prefix);
  }
  var provided = typeof message === "function" ? message() : message;
  var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
  throw new Error(value);
}

// node_modules/react-beforeunload/lib/index.esm.js
var useBeforeunload = function useBeforeunload2(handler) {
  !(handler == null || typeof handler === "function") ? true ? invariant(false, "Expected `handler` to be a function") : invariant(false) : void 0;
  var eventListenerRef = (0, import_react.useRef)();
  (0, import_react.useEffect)(function() {
    eventListenerRef.current = function(event) {
      var returnValue = handler === null || handler === void 0 ? void 0 : handler(event);
      if (typeof returnValue === "string") {
        return event.returnValue = returnValue;
      }
      if (event.defaultPrevented) {
        return event.returnValue = "";
      }
    };
  }, [handler]);
  (0, import_react.useEffect)(function() {
    var eventListener = function eventListener2(event) {
      return eventListenerRef.current(event);
    };
    window.addEventListener("beforeunload", eventListener);
    return function() {
      window.removeEventListener("beforeunload", eventListener);
    };
  }, []);
};
var Beforeunload = function Beforeunload2(_ref) {
  var _ref$children = _ref.children, children = _ref$children === void 0 ? null : _ref$children, onBeforeunload = _ref.onBeforeunload;
  useBeforeunload(onBeforeunload);
  return children;
};
Beforeunload.propTypes = true ? {
  children: import_prop_types.default.any,
  onBeforeunload: import_prop_types.default.func.isRequired
} : {};
export {
  Beforeunload,
  useBeforeunload
};
//# sourceMappingURL=react-beforeunload.js.map
