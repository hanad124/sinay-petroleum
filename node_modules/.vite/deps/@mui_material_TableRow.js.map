{
  "version": 3,
  "sources": ["../../@mui/material/TableRow/TableRow.js", "../../@mui/material/TableRow/tableRowClasses.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\r\nimport { alpha } from '@mui/system';\r\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport styled from '../styles/styled';\r\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    selected,\r\n    hover,\r\n    head,\r\n    footer\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\r\n  };\r\n  return composeClasses(slots, getTableRowUtilityClass, classes);\r\n};\r\nconst TableRowRoot = styled('tr', {\r\n  name: 'MuiTableRow',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\r\n  }\r\n})(({\r\n  theme\r\n}) => ({\r\n  color: 'inherit',\r\n  display: 'table-row',\r\n  verticalAlign: 'middle',\r\n  // We disable the focus ring for mouse, touch and keyboard users.\r\n  outline: 0,\r\n  [`&.${tableRowClasses.hover}:hover`]: {\r\n    backgroundColor: (theme.vars || theme).palette.action.hover\r\n  },\r\n  [`&.${tableRowClasses.selected}`]: {\r\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n    '&:hover': {\r\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\r\n    }\r\n  }\r\n}));\r\nconst defaultComponent = 'tr';\r\n/**\r\n * Will automatically set dynamic row height\r\n * based on the material table element parent (head, body, etc).\r\n */\r\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTableRow'\r\n  });\r\n  const {\r\n      className,\r\n      component = defaultComponent,\r\n      hover = false,\r\n      selected = false\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const tablelvl2 = React.useContext(Tablelvl2Context);\r\n  const ownerState = _extends({}, props, {\r\n    component,\r\n    hover,\r\n    selected,\r\n    head: tablelvl2 && tablelvl2.variant === 'head',\r\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\r\n    as: component,\r\n    ref: ref,\r\n    className: clsx(classes.root, className),\r\n    role: component === defaultComponent ? null : 'row',\r\n    ownerState: ownerState\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * Should be valid <tr> children such as `TableCell`.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * If `true`, the table row will shade on hover.\r\n   * @default false\r\n   */\r\n  hover: PropTypes.bool,\r\n  /**\r\n   * If `true`, the table row will have the selected shading.\r\n   * @default false\r\n   */\r\n  selected: PropTypes.bool,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\r\n} : void 0;\r\nexport default TableRow;", "import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\r\nimport generateUtilityClass from '../generateUtilityClass';\r\nexport function getTableRowUtilityClass(slot) {\r\n  return generateUtilityClass('MuiTableRow', slot);\r\n}\r\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\r\nexport default tableRowClasses;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AACAA;AAEA;AACA;;;ACVA;AACA;AACO,SAAS,wBAAwB,MAAM;AAC5C,SAAO,qBAAqB,eAAe,IAAI;AACjD;AACA,IAAM,kBAAkB,uBAAuB,eAAe,CAAC,QAAQ,YAAY,SAAS,QAAQ,QAAQ,CAAC;AAC7G,IAAO,0BAAQ;;;ADMf,yBAA4B;AAV5B,IAAM,YAAY,CAAC,aAAa,aAAa,SAAS,UAAU;AAWhE,IAAM,oBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,MAAM,CAAC,QAAQ,YAAY,YAAY,SAAS,SAAS,QAAQ,QAAQ,UAAU,QAAQ;AAAA,EAC7F;AACA,SAAO,eAAe,OAAO,yBAAyB,OAAO;AAC/D;AACA,IAAM,eAAe,eAAO,MAAM;AAAA,EAChC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,mBAAmB,CAAC,OAAO,WAAW;AACpC,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,WAAO,CAAC,OAAO,MAAM,WAAW,QAAQ,OAAO,MAAM,WAAW,UAAU,OAAO,MAAM;AAAA,EACzF;AACF,CAAC,EAAE,CAAC;AAAA,EACF;AACF,OAAO;AAAA,EACL,OAAO;AAAA,EACP,SAAS;AAAA,EACT,eAAe;AAAA;AAAA,EAEf,SAAS;AAAA,EACT,CAAC,KAAK,wBAAgB,aAAa,GAAG;AAAA,IACpC,kBAAkB,MAAM,QAAQ,OAAO,QAAQ,OAAO;AAAA,EACxD;AAAA,EACA,CAAC,KAAK,wBAAgB,UAAU,GAAG;AAAA,IACjC,iBAAiB,MAAM,OAAO,QAAQ,MAAM,KAAK,QAAQ,QAAQ,iBAAiB,MAAM,KAAK,QAAQ,OAAO,qBAAqB,MAAM,MAAM,QAAQ,QAAQ,MAAM,MAAM,QAAQ,OAAO,eAAe;AAAA,IACvM,WAAW;AAAA,MACT,iBAAiB,MAAM,OAAO,QAAQ,MAAM,KAAK,QAAQ,QAAQ,sBAAsB,MAAM,KAAK,QAAQ,OAAO,qBAAqB,MAAM,KAAK,QAAQ,OAAO,mBAAmB,MAAM,MAAM,QAAQ,QAAQ,MAAM,MAAM,QAAQ,OAAO,kBAAkB,MAAM,QAAQ,OAAO,YAAY;AAAA,IAC/R;AAAA,EACF;AACF,EAAE;AACF,IAAM,mBAAmB;AAKzB,IAAM,WAA8B,iBAAW,SAASC,UAAS,SAAS,KAAK;AAC7E,QAAM,QAAQ,cAAc;AAAA,IAC1B,OAAO;AAAA,IACP,MAAM;AAAA,EACR,CAAC;AACD,QAAM;AAAA,IACF;AAAA,IACA,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,EACb,IAAI,OACJ,QAAQ,8BAA8B,OAAO,SAAS;AACxD,QAAM,YAAkB,iBAAW,wBAAgB;AACnD,QAAM,aAAa,SAAS,CAAC,GAAG,OAAO;AAAA,IACrC;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM,aAAa,UAAU,YAAY;AAAA,IACzC,QAAQ,aAAa,UAAU,YAAY;AAAA,EAC7C,CAAC;AACD,QAAM,UAAU,kBAAkB,UAAU;AAC5C,aAAoB,mBAAAC,KAAK,cAAc,SAAS;AAAA,IAC9C,IAAI;AAAA,IACJ;AAAA,IACA,WAAW,eAAK,QAAQ,MAAM,SAAS;AAAA,IACvC,MAAM,cAAc,mBAAmB,OAAO;AAAA,IAC9C;AAAA,EACF,GAAG,KAAK,CAAC;AACX,CAAC;AACD,OAAwC,SAAS,YAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlF,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA,EAIpB,SAAS,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAInB,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,OAAO,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjB,UAAU,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIpB,IAAI,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,MAAM,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,IAAI,CAAC,CAAC,GAAG,kBAAAA,QAAU,MAAM,kBAAAA,QAAU,MAAM,CAAC;AACxJ,IAAI;AACJ,IAAO,mBAAQ;",
  "names": ["init_esm", "TableRow", "_jsx", "PropTypes"]
}
